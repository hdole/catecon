doctype html
html(lang="en")
	head
		meta(charset="utf-8")
		meta(name="viewport", content="width=device-width, initial-scale=1")
		link(rel="stylesheet", type="text/css", href="/ss/catecon.css")
		title Catecon
	body
		include ../public/svg/icons.svg
		#navbar
		#help-sidenav.sidenavPnl.sidenavLeftPnl
		#settings-sidenav.sidenavPnl.sidenavLeftPnl
		#login-sidenav.sidenavPnl.sidenavLeftPnl
		#tty-sidenav.sidenavPnl.sidenavLeftPnl
		#threeD-sidenav.sidenavPnl.sidenavLeftPnl
		.svg
			#toolbar.hidden
				#toolbar-header
				#toolbar-help
				#toolbar-error.hidden
			svg#topSVG(xmlns="http://www.w3.org/2000/svg")
				defs
					filter#softGlow(height="300%", width="300%")
						feMorphology(operator="dilate", radius="2", in="SourceAlpha", result="thicken")
						feGaussianBlur(in="thicken", stdDeviation="2", result="blurred")
						feFlood(flood-color="rgb(192,192,192)", result="glowColor")
						feComposite(in="glowColor", in2="blurred", operator="in", result="softGlow_colored")
						feMerge
							feMergeNode(in="softGlow_colored")
							feMergeNode(in="SourceGraphic")
					filter#diagramGlow(height="300%", width="300%")
						feMorphology(operator="dilate", radius="4", in="SourceAlpha", result="thicken")
						feGaussianBlur(in="thicken", stdDeviation="5", result="blurred")
						feFlood(flood-color="rgb(0,255,0)", result="glowColor")
						feComposite(in="glowColor", in2="blurred", operator="in", result="diagramGlow_colored")
						feMerge
							feMergeNode(in="diagramGlow_colored")
							feMergeNode(in="SourceGraphic")
					radialGradient#radgrad1(cx="50%", cy="50%", r="50%", fx="50%", fy="50%")
						stop(offset="0%", style="stop-color:rgb(0,0,0);stop-opacity:1")
						stop(offset="100%", style="stop-color:rgb(255,255,255);stop-opacity:0")
					radialGradient#radgrad2(cx="50%", cy="50%", r="50%", fx="50%", fy="50%")
						stop(offset="0%", style="stop-color:rgb(127,127,127);stop-opacity:1")
						stop(offset="100%", style="stop-color:rgb(255,255,255);stop-opacity:0")
					g#threeD_base
						line.arrow0(x1="120", y1="180", x2="280", y2="180", marker-end="url(#arrowhead)")
						line.arrow0(x1="120", y1="180", x2="120", y2="40", marker-end="url(#arrowhead)")
						line.arrow0(x1="120", y1="180", x2="40", y2="280", marker-end="url(#arrowhead)")
					filter#diagramShadow
						feDropShadow(dx="6", dy="6", stdDeviation="0.2", flood-color="#bbbb")
					filter#defaultGlow
						feDropShadow(dx="4", dy="4", stdDeviation="0.2", flood-color="#bb0b")
				marker#arrowhead(viewBox="6 12 60 90", refX="50", refY="50", markerUnits="strokeWidth", markerWidth="6", markerHeight="5", orient="auto")
					path.svgstr3(d="M10 20 L60 50 L10 80")
				marker#arrowheadRev(viewBox="6 12 60 90", refX="15", refY="50", markerUnits="strokeWidth", markerWidth="6", markerHeight="5", orient="auto")
					path.svgstr3(d="M60 20 L10 50 L60 80")
				g#diagramSVG.trans
			svg#uiSVG(xmlns="http://www.w3.org/2000/svg")
		#statusbar
		#catalog.catalogTop.hidden
		script#vertexShader(type="x-shader/x-vertex")
			|varying vec3 vWorldPosition;
			|void main()
			|{
			|	vec4 worldPosition = modelMatrix * vec4( position, 1.0 );
			|	vWorldPosition = worldPosition.xyz;
			|	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
			|}
		script#fragmentShader(type="x-shader/x-fragment")
			|uniform vec3 topColor;
			|uniform vec3 bottomColor;
			|uniform float offset;
			|uniform float exponent;
			|varying vec3 vWorldPosition;
			|void main()
			|{
			|	float h = normalize( vWorldPosition + offset ).y;
			|	gl_FragColor = vec4( mix( bottomColor, topColor, max( pow( max( h , 0.0), exponent ), 0.0 ) ), 1.0 );
			|}
		script(type="text/javascript", src="/js/sjcl.js")
		script(type="text/javascript", src="/js/sha256.js")
		script(type="text/javascript", src="/js/H3.js")
		script(type="text/javascript", src="/js/D2.js")
		script(type="text/javascript", src="https://sdk.amazonaws.com/js/aws-sdk-2.306.0.min.js")
		script(type="text/javascript", src="/js/amazon-cognito-identity.min.js")
		script(type="text/javascript", src="/js/Cat.js")
		script(type="text/javascript", src="/js/HTML.js")
		script(type="text/javascript", src="/js/javascript.js")
		script(type="text/javascript", src="/js/cpp.js")
		script(type="text/javascript", src="/js/mysql.js")
